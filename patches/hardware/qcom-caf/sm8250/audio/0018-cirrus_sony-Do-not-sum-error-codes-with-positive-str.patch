From 509fa6a54bb23999d9d2c9113138eb7a0950cec7 Mon Sep 17 00:00:00 2001
From: Marijn Suijten <marijns95@gmail.com>
Date: Thu, 11 Feb 2021 23:02:40 +0100
Subject: [PATCH 18/26] cirrus_sony: Do not sum error codes with positive
 string-length

cirrus_format_mixer_name returns the number of formatted characters
(result of snprintf). Returning this positive number is not always a
good idea, like when check_error_state returns 22 as the length of a
mixer control, which is caught by the `==0` check resulting in a full
reset.
Secondly, a postive length of 22 together with an actual, expected
failure of -EINVAL which conveniently is -22 results in 0; no error at
all!!

Signed-off-by: Marijn Suijten <marijns95@gmail.com>
---
 hal/audio_extn/cirrus_sony.c | 88 +++++++++++++++++++++++++++---------
 1 file changed, 66 insertions(+), 22 deletions(-)

diff --git a/hal/audio_extn/cirrus_sony.c b/hal/audio_extn/cirrus_sony.c
index ad339ff92..dc893eff5 100644
--- a/hal/audio_extn/cirrus_sony.c
+++ b/hal/audio_extn/cirrus_sony.c
@@ -464,14 +464,18 @@ static int cirrus_set_mixer_value_by_name_lr(char* ctl_base_name, int value) {
     int ret = 0;
 
     ret = cirrus_format_mixer_name(ctl_base_name, "L", ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_value_by_name(ctl_name, value);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_value_by_name(ctl_name, value);
     if (ret < 0) {
         ALOGE("%s: Cannot set mixer %s to %d", __func__, ctl_name, value);
         goto end;
     }
 
     ret = cirrus_format_mixer_name(ctl_base_name, "R", ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_value_by_name(ctl_name, value);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_value_by_name(ctl_name, value);
     if (ret < 0)
         ALOGE("%s: Cannot set mixer %s to %d", __func__, ctl_name, value);
 end:
@@ -719,7 +723,9 @@ static int cirrus_do_reset(const char *channel) {
     int ret = 0;
 
     ret = cirrus_format_mixer_name("CCM Reset", channel, ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_value_by_name(ctl_name);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_value_by_name(ctl_name);
     if (ret < 0) {
         ALOGE("%s: CCM Reset is missing!!!", __func__);
     } else {
@@ -744,7 +750,9 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
 
     /* If this one is missing, we're not using our Cirrus codec... */
     ret = cirrus_format_mixer_name("DSP Booted", channel, ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_value_by_name(ctl_name);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_value_by_name(ctl_name);
     if (ret < 0) {
         ALOGE("%s: %s control is missing. Bailing out.", __func__, ctl_name);
         ret = -ENODEV;
@@ -762,7 +770,9 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
 
     ret = cirrus_format_mixer_name("DSP1 Preload Switch",
                                    channel, ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_value_by_name(ctl_name, 0);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_value_by_name(ctl_name, 0);
     if (ret < 0) {
         ALOGE("%s: Cannot reset %s", __func__, ctl_name);
         goto exit;
@@ -771,14 +781,18 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
 
     /* Determine what firmware to load and configure DSP */
     ret = cirrus_format_mixer_name("DSP1 Firmware", channel, ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_enum_by_name(ctl_name, fw_type);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_enum_by_name(ctl_name, fw_type);
     if (ret < 0) {
         ALOGE("%s: Cannot set %s to %s", __func__, ctl_name, fw_type);
         goto exit;
     }
 
     ret = cirrus_format_mixer_name("PCM Source", channel, ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_enum_by_name(ctl_name, "DSP");
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_enum_by_name(ctl_name, "DSP");
     if (ret < 0) {
         ALOGE("%s: Cannot set %s to DSP", __func__, ctl_name);
         goto exit;
@@ -787,7 +801,9 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
     /* Send the firmware! */
     ret = cirrus_format_mixer_name("DSP1 Preload Switch",
                                    channel, ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_value_by_name(ctl_name, 1);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_value_by_name(ctl_name, 1);
     if (ret < 0) {
         ALOGE("%s: Cannot set %s to %s", __func__, ctl_name, fw_type);
         goto exit;
@@ -995,7 +1011,9 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_STATUS, "L",
                                    ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_array_by_name(ctl_name,
                                           &handle.spkl.status, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
@@ -1004,7 +1022,9 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_STATUS, "R",
                                    ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_array_by_name(ctl_name,
                                           &handle.spkr.status, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
@@ -1037,7 +1057,9 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_CHECKSUM, "L",
                                    ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_array_by_name(ctl_name,
                                          &handle.spkl.checksum, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
@@ -1046,7 +1068,9 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_CHECKSUM, "R",
                                    ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_array_by_name(ctl_name,
                                          &handle.spkr.checksum, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
@@ -1055,7 +1079,9 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_R, "L",
                                    ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_array_by_name(ctl_name,
                                          &handle.spkl.cal_r, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
@@ -1064,7 +1090,9 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_R, "R",
                                    ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_array_by_name(ctl_name,
                                          &handle.spkr.cal_r, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
@@ -1165,7 +1193,9 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_R, "L",
                                     ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkl.cal_r, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot set Z-L calibration", __func__);
@@ -1174,7 +1204,9 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_R, "R",
                                     ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkr.cal_r, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot set Z-R calibration", __func__);
@@ -1183,7 +1215,9 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_STATUS, "L",
                                     ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkl.status, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot set calibration L status", __func__);
@@ -1192,7 +1226,9 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_STATUS, "R",
                                     ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkr.status, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot set calibration R status", __func__);
@@ -1201,7 +1237,9 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_CHECKSUM, "L",
                                     ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkl.checksum, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot set checksum L", __func__);
@@ -1210,7 +1248,9 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_CHECKSUM, "R",
                                     ctl_name, sizeof(ctl_name));
-    ret += cirrus_set_mixer_array_by_name(ctl_name,
+    if (ret < 0)
+        return ret;
+    ret = cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkr.checksum, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot set checksum R", __func__);
@@ -1323,7 +1363,9 @@ static int cirrus_check_error_state_stereo(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CSPL_ERRORNO, "L",
                                    ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_array_by_name(ctl_name, &cspl_error, 4);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_array_by_name(ctl_name, &cspl_error, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
         goto exit;
@@ -1337,7 +1379,9 @@ static int cirrus_check_error_state_stereo(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CSPL_ERRORNO, "R",
                                    ctl_name, sizeof(ctl_name));
-    ret += cirrus_get_mixer_array_by_name(ctl_name, &cspl_error, 4);
+    if (ret < 0)
+        return ret;
+    ret = cirrus_get_mixer_array_by_name(ctl_name, &cspl_error, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
         goto exit;
-- 
2.37.1

